<Project>

  <!--
    Using `TaskHostFactory` ensures that the task assembly will not be locked
    at the end of the build. If it's omitted, that can cause build failures
    in subsequent builds because the task assembly can't be overwritten.
  -->
  <UsingTask AssemblyFile="$(_MTGOSDK_MSBuild)"
             TaskName="ExtractMTGOInstallation"
             TaskFactory="TaskHostFactory" />
  <UsingTask AssemblyFile="$(_MTGOSDK_MSBuild)"
             TaskName="GenerateReferenceAssemblies"
             TaskFactory="TaskHostFactory" />

  <Target Name="GenerateReferenceAssemblies"
          BeforeTargets="ResolveAssemblyReferences">
    <!--
      Extract the MTGO installation directory paths, or create a temporary
      extraction directory if no existing MTGO installation could be found.
    -->
    <ExtractMTGOInstallation
        MTGOAppDir="$(MTGOAppDir)"
        MTGODataDir="$(MTGODataDir)"
        ReferencePaths="@(ReferenceAssemblies)">
      <!-- Expand the glob to the (local) MTGO install/user directories -->
      <Output TaskParameter="MTGOAppDir" PropertyName="MTGOAppDir" />
      <Output TaskParameter="MTGODataDir" PropertyName="MTGODataDir" />
      <!-- Output the MTGO version for use in the consuming project -->
      <Output TaskParameter="Version" PropertyName="MTGOVersion" />
    </ExtractMTGOInstallation>

    <!--
      We build reference assemblies from the latest MTGO installation directory
      to ensure that we're only targeting the latest APIs of the MTGO client.

      This also ensures that we don't bundle any MTGO binaries containing
      implementation details or private APIs that we don't want to redistribute.
    -->
    <GenerateReferenceAssemblies
        MTGOAppDir="$(MTGOAppDir)"
        Version="$(MTGOVersion)"
        OutputPath="$(_MTGOSDK_Refs)">
      <!--
        Indicates whether the task has skipped generating reference assemblies.
      -->
      <Output TaskParameter="HasSkipped" PropertyName="HasSkipped" />
      <!--
        Updates the internal reference path to reflect the new subpath.

        Note that this is only resolved after project dependencies are resolved,
        and cannot be used as part of any `Reference` item groups.
      -->
      <Output TaskParameter="OutputPath" PropertyName="_MTGOSDK_Refs" />
    </GenerateReferenceAssemblies>

    <!-- Add the reference assembly path to the assembly search paths -->
    <PropertyGroup Condition="'$(UseRef)' == 'true'">
      <AssemblySearchPaths>$(AssemblySearchPaths);$(_MTGOSDK_Refs)</AssemblySearchPaths>
    </PropertyGroup>

    <!-- Notify if the task has finished or skipped generating assemblies -->
    <Message Text="MTGOSDK.MSBuild: Updated reference assemblies for MTGO version $(MTGOVersion)"
             Importance="high"
             Condition="'$(HasSkipped)' != 'true'" />
    <Message Text="MTGOSDK.MSBuild: Reference assemblies are located at $(_MTGOSDK_Refs)"
             Importance="high"
             Condition="'$(HasSkipped)' != 'true'" />
  </Target>

  <Target Name="ResolveReferenceAssemblies"
          AfterTargets="ResolveAssemblyReferences"
          BeforeTargets="CoreCompile"
          DependsOnTargets="GenerateReferenceAssemblies"
          Condition="'@(ReferenceCopyLocalPaths)' != ''">
    <ItemGroup>
      <!-- Filter reference paths for those pointing to reference assemblies -->
      <ReferenceAssemblies
        Include="@(ReferenceCopyLocalPaths)"
        Condition="$([System.String]::Copy(%(FullPath)).Contains($(_MTGOSDK_Refs)))" />
    </ItemGroup>
  </Target>

</Project>